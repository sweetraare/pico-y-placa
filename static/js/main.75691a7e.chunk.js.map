{"version":3,"sources":["components/PlateInput.js","components/DateInput.js","components/QueryButton.js","constants/contants.js","components/NormalResult.js","components/HoyNoCirculaResult.js","App.js","reportWebVitals.js","index.js"],"names":["PlateInput","plateProp","plate","setPlate","className","value","mask","alwaysShowMask","onChange","e","target","toUpperCase","replaceAll","length","registerLocale","es","DateInput","dateProp","date","setSelectedDate","selected","showTimeSelect","locale","dateFormat","timeIntervals","minDate","Date","QueryButton","text","props","ESPECIAL_VALUES","NormalResult","isWeekend","includes","hours","getHours","minutes","getMinutes","isOutOfTimeRange","dayOfTheWeek","getDay","lastDigitPlate","Number","parseInt","substr","isNaN","isPlateAble","HoyNoCirculaResult","isInHourRange","App","useState","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75691a7e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport \"../App.css\";\n\nfunction PlateInput({ plateProp }) {\n  const mask = \"aaa-9999\";\n\n  const { plate, setPlate } = plateProp;\n\n  return (\n    <div className=\"input-container\">\n      <label className=\"d-flex\">\n        <span className=\"input__label\">Ingrese su Placa</span>\n        <InputMask\n          value={plate}\n          mask={mask}\n          alwaysShowMask\n          onChange={(e) => setPlate(e.target.value.toUpperCase())}\n        />\n      </label>\n      {plate?.replaceAll?.(\"_\", \"\").length !== 8 && (\n        <p className=\"error-message\">Debe ingresar una placa válida</p>\n      )}\n    </div>\n  );\n}\n\nexport default PlateInput;\n","import React, { useState } from \"react\";\nimport DatePicker, { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport es from \"date-fns/locale/es\";\nimport \"../App.css\";\nregisterLocale(\"es\", es);\n\nfunction DateInput({ dateProp }) {\n  const { date, setSelectedDate } = dateProp;\n\n  const renderErrorMessage = () => {\n    if (!date && !date?.length) {\n      return <p className=\"error-message\">Debe seleccionar una fecha</p>;\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"input-container\">\n      <label className=\"d-flex\">\n        <span className=\"input__label\">Ingrese el día que desea salir</span>\n        <DatePicker\n          selected={date}\n          onChange={setSelectedDate}\n          showTimeSelect\n          locale=\"es\"\n          dateFormat=\"dd/MM/yyyy h:mm aa\"\n          timeIntervals={15}\n          minDate={new Date()}\n        />\n      </label>\n      {renderErrorMessage()}\n    </div>\n  );\n}\n\nexport default DateInput;\n","import React, { useState } from \"react\";\nimport \"../App.css\";\n\nfunction QueryButton({ text, ...props }) {\n  return (\n    <button className=\"btn query-button\" {...props}>\n      {text}\n    </button>\n  );\n}\n\nexport default QueryButton;\n","export const ESPECIAL_VALUES = \"AUZEXM\";\n","import React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport getHours from \"date-fns/getHours\";\nimport getMinutes from \"date-fns/getMinutes\";\nimport getDay from \"date-fns/getDay\";\nimport { ESPECIAL_VALUES } from \"../constants/contants\";\n\nfunction NormalResult({ plate, date }) {\n  const isOutOfTimeRange = () => {\n    const hours = getHours(new Date(date));\n    const minutes = getMinutes(new Date(date));\n\n    if (hours >= 20 || hours < 7) {\n      return true;\n    }\n    if (hours > 10 && hours < 16) {\n      return true;\n    }\n    if (hours === 9 && minutes > 30 && hours < 16) {\n      return true;\n    }\n    if (hours === 19 && minutes >= 30 && hours > 9) {\n      return true;\n    }\n    return false;\n  };\n\n  const isPlateAble = () => {\n    const dayOfTheWeek = getDay(new Date(date));\n    const lastDigitPlate = Number.parseInt(plate.substr(plate.length - 1));\n    if (\n      isNaN(lastDigitPlate) ||\n      (dayOfTheWeek * 2) % 10 === lastDigitPlate ||\n      dayOfTheWeek * 2 - 1 === lastDigitPlate\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const renderMessage = () => {\n    if (isWeekend(new Date(date))) {\n      return \"Puede circular ya que es fin de semana\";\n    }\n    if (ESPECIAL_VALUES.includes(plate[1])) {\n      return \"Puede circular ya que es un vehículo con concesión\";\n    }\n    if (isOutOfTimeRange()) {\n      return \"Puede circular ya que está fuera del horario del pico y placa\";\n    }\n    if (isPlateAble()) {\n      return \"Puede circular ya que su placa no tiene restricción hoy\";\n    }\n    return \"No puede circular\";\n  };\n\n  return <div>{renderMessage()}</div>;\n}\n\nexport default NormalResult;\n","import React, { useState } from \"react\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport getHours from \"date-fns/getHours\";\nimport getMinutes from \"date-fns/getMinutes\";\nimport getDay from \"date-fns/getDay\";\nimport { ESPECIAL_VALUES } from \"../constants/contants\";\n\nfunction HoyNoCirculaResult({ plate, date }) {\n  const isInHourRange = () => {\n    const hours = getHours(new Date(date));\n\n    if (hours >= 5 && hours <= 20) {\n      return true;\n    }\n    return false;\n  };\n\n  const renderMessage = () => {\n    if (isWeekend(new Date(date))) {\n      return \"No se puede circular en fines de semana\";\n    }\n    if (ESPECIAL_VALUES.includes(plate[1])) {\n      return \"Puede circular ya que es un vehículo con concesión\";\n    }\n    if (isInHourRange()) {\n      return \"Puede circular hasta las 20:00\";\n    }\n    if (!isInHourRange()) {\n      return \"No puede circular desde las 20:00 hasta las 05:00\";\n    }\n    return \"No puede circular\";\n  };\n\n  return <div>{renderMessage()}</div>;\n}\n\nexport default HoyNoCirculaResult;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport PlateInput from \"./components/PlateInput\";\nimport DateInput from \"./components/DateInput\";\nimport QueryButton from \"./components/QueryButton\";\nimport NormalResult from \"./components/NormalResult\";\nimport HoyNoCirculaResult from \"./components/HoyNoCirculaResult\";\n\nfunction App() {\n  const [date, setSelectedDate] = useState(\"\");\n  const [plate, setPlate] = useState(\"\");\n\n  const picoYPlacaURL =\n    \"https://elyex.com/horario-de-pico-y-placa-quito-2020-multas-y-mapa/\";\n  const hoyNoCirculaURL =\n    \"https://as.com/diarioas/2021/05/03/actualidad/1620072443_222020.html\";\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"container\">\n        <h1 className=\"title\">Pico y Placa</h1>\n        <PlateInput plateProp={{ plate, setPlate }} />\n        <DateInput dateProp={{ date, setSelectedDate }} />\n      </div>\n      <div className=\"response-container d-flex\">\n        <div className=\"col card\">\n          <h3 className=\"title\">Pico Y Placa</h3>\n          <NormalResult date={date} plate={plate} />\n          <a target=\"_blank\" href={picoYPlacaURL}>\n            <QueryButton text={\"Consultar sobre pico y placa\"} />\n          </a>\n        </div>\n        <div className=\"col card\">\n          <h3 className=\"title\">Hoy no Circula (Toque de queda)</h3>\n          <HoyNoCirculaResult date={date} plate={plate} />\n          <a target=\"_blank\" href={hoyNoCirculaURL}>\n            <QueryButton text={\"Consultar sobre hoy no circula\"} />\n          </a>\n        </div>\n      </div>\n      <p className=\"sign\">Made by: sweetraare</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}